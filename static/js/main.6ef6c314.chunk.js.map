{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toLocaleTimeString","timerId","this","setInterval","date","setState","console","log","prevProps","name","props","clearInterval","className","React","Component","clockNames","App","isClockVisible","clockName","getClockName","randomNewName","Math","floor","random","length","showClock","hideClock","type","onClick","disabled","ReactDOM","render","document","getElementById"],"mappings":"2OAWaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,IAAMC,EAAa,IAAIL,KAEvB,EAAKM,SAAS,CACZP,KAAMM,EAAKJ,uBAGbM,QAAQC,IAAIH,EAAKJ,wBAChB,OAhBP,gCAmBE,SAAmBQ,GACjB,IAAQC,EAASP,KAAKQ,MAAdD,KAEJD,EAAUC,OAASA,GAErBH,QAAQC,IAAR,sCAA2CC,EAAUC,KAArD,gBAAiEP,KAAKQ,MAAMD,SAxBlF,kCA4BE,WACMP,KAAKD,SACPU,cAAcT,KAAKD,WA9BzB,oBAkCE,WACE,IAAQQ,EAASP,KAAKQ,MAAdD,KACAX,EAASI,KAAKL,MAAdC,KAER,OACE,sBAAKc,UAAU,QAAf,UACE,oBAAIA,UAAU,eAAd,SACGH,IAEH,mBAAGG,UAAU,cAAc,UAAQ,OAAnC,2CAC8Bd,YA5CtC,GAA2Be,IAAMC,WCC3BC,G,MAAuB,CAC3B,mBACA,cACA,2BACA,mBACA,qBACA,qBACA,yBACA,wBACA,iBACA,oCAGIC,E,4MACJnB,MAAQ,CACNoB,gBAAgB,EAChBC,UAAW,S,EAGbC,aAAe,WACb,IAAMC,EAAgBL,EACpBM,KAAKC,MAAMD,KAAKE,SAAWR,EAAWS,SAGxC,EAAKnB,SAAS,CAAEa,UAAWE,K,EAG7BK,UAAY,WACV,EAAKpB,SAAS,CACZY,gBAAgB,K,EAIpBS,UAAY,WACV,EAAKrB,SAAS,CACZY,gBAAgB,K,4CAIpB,WACE,MAAsCf,KAAKL,MAAnCqB,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,eAEnB,OACE,sBAAKL,UAAU,MAAf,UACGK,GAAkB,cAAC,EAAD,CAAOR,KAAMS,IAEhC,sBAAKN,UAAU,eAAf,UACE,wBACEA,UAAU,gBACVe,KAAK,SACLC,QAAS1B,KAAKuB,UACdI,SAAUZ,EAJZ,wBASA,wBACEL,UAAU,gBACVe,KAAK,SACLC,QAAS1B,KAAKwB,UACdG,UAAWZ,EAJb,wBASA,wBACEL,UAAU,gBACVe,KAAK,SACLC,QAAS1B,KAAKiB,aACdU,UAAWZ,EAJb,mC,GApDQJ,IAAMC,WAkETE,ICxFfc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6ef6c314.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.scss';\n\ninterface Props {\n  name: string,\n}\n\ninterface State {\n  time: string,\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  };\n\n  timerId?: NodeJS.Timer;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      const date: Date = new Date();\n\n      this.setState({\n        time: date.toLocaleTimeString(),\n      });\n      // eslint-disable-next-line no-console\n      console.log(date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { name } = this.props;\n\n    if (prevProps.name !== name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from #${prevProps.name} to #${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    const { name } = this.props;\n    const { time } = this.state;\n\n    return (\n      <div className=\"clock\">\n        <h2 className=\"clock__title\">\n          {name}\n        </h2>\n        <p className=\"clock__text\" data-cy=\"time\">\n          {`What time is now? It is ${time}`}\n        </p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface Props {}\n\ninterface State {\n  isClockVisible: boolean;\n  clockName: string;\n}\n\nconst clockNames: string[] = [\n  'Elementary clock',\n  'Basic clock',\n  'A race against the clock',\n  'Clock is running',\n  'Ukrainian clock UA',\n  'Put the clock back',\n  'Watching the clock O_O',\n  'Rock Around The Clock',\n  'Beat the clock',\n  'The biological clock is ticking',\n];\n\nclass App extends React.Component<Props, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 'Clock',\n  };\n\n  getClockName = () => {\n    const randomNewName = clockNames[\n      Math.floor(Math.random() * clockNames.length)\n    ];\n\n    this.setState({ clockName: randomNewName });\n  };\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  };\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  };\n\n  render() {\n    const { clockName, isClockVisible } = this.state;\n\n    return (\n      <div className=\"app\">\n        {isClockVisible && <Clock name={clockName} />}\n\n        <div className=\"app__buttons\">\n          <button\n            className=\"buttons__item\"\n            type=\"button\"\n            onClick={this.showClock}\n            disabled={isClockVisible}\n          >\n            Show Clock\n          </button>\n\n          <button\n            className=\"buttons__item\"\n            type=\"button\"\n            onClick={this.hideClock}\n            disabled={!isClockVisible}\n          >\n            Hide Clock\n          </button>\n\n          <button\n            className=\"buttons__item\"\n            type=\"button\"\n            onClick={this.getClockName}\n            disabled={!isClockVisible}\n          >\n            Random Name\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}